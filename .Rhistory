getwd()
setwd("~/BigData/datasciencecoursera/5 - Reproducible Research/RepData_PeerAssessment1")
zipF <- "activity.zip"
outDir <- "../"
unzip(zipF, exdir=outDir)
outDir <- "./"
unzip(zipF, exdir=outDir)
data <- read.csv("activity.csv", header = T, sep = ",")
str(data)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
str(data)
library(dplyr)
str(data)
stepsbyday <- data %>% group_by(date) %>% summarize(steps, count())
library(data.table)
stepsbyday <- data %>% group_by(date) %>% summarize(steps, count())
stepsbyday <- data %>% group_by(date) %>% summarize(total = sum(steps))
stepsbyday
data[which(data$date == 2012-10-02),]
data[which(data$date == "2012-10-02"),]
str(stepsbyday)
hist(stepsbyday$date, stepsbyday$total)
hist(stepsbyday$date, stepsbyday$total, breaks = 61)
hist(stepsbyday$date)
barplot(stepsbyday$date, stepsbyday$total)
freq <- stepsbyday$total
barplot(stepsbyday$date, freq)
str(freq)
freq <- as.vector(stepsbyday$total)
barplot(stepsbyday$date, freq)
str(freq)
dailyave <- sum(stepsbyday$steps) / length(stepsbyday)
dailyave <- sum(stepsbyday$steps) / length(stepsbyday$steps)
str(stepsbyday)
dailyave <- sum(stepsbyday$total) / length(stepsbyday$total)
View(stepsbyday)
dailyave <- sum(!is.na(stepsbyday$total)) / length(!is.na(stepsbyday$total))
sum(!is.na(stepsbyday$total))
sum(stepsbyday$total)
sum(stepsbyday$total, na.omit)
sum(stepsbyday$total, na.omit = T)
sum(stepsbyday$total, na.rm =  = T)
sum(stepsbyday$total, na.rm = T)
length(!is.na(stepsbyday$total))
length(stepsbyday$total, na.rm = T)
dailyave <- sum(stepsbyday$total, na.rm = T) / length(stepsbyday$total)
is.na(stepsbyday$total)
length(stepsby$day$total[is.na(stepsbyday$total)])
length(stepsbyday$total[is.na(stepsbyday$total)])
length(stepsbyday$total[!is.na(stepsbyday$total)])
dailyave <- sum(stepsbyday$total, na.rm = T) / length(stepsbyday$total[!is.na(stepsbyday$total)])
print(dailyave)
library(dplyr)
zipF <- "activity.zip"
outDir <- "./"
unzip(zipF, exdir=outDir)
data <- read.csv("activity.csv", header = T, sep = ",")
data$date <- as.Date(data$date, format = "%Y-%m-%d")
stepsbyday <- data %>% group_by(date) %>% summarize(total = sum(steps))
dailyave <- sum(stepsbyday$total, na.rm = T) / length(stepsbyday$total[!is.na(stepsbyday$total)])
print(dailyave)
mean(stepsbyday$total, na.rm = T)
print("Mean of the total number of steps taken by day :", dailyave)
print("Mean of the total number of steps taken by day :" dailyave)
paste("Mean of the total number of steps taken by day :", dailyave)
paste("Mean of the total number of steps taken by day :", mean(stepsbyday$total, na.rm = T))
paste("Median of the total number of steps taken by day :", median(stepsbyday$total, na.rm = T))
str(stepsbyday)
qplot(stepsbyday$date, stepsbyday$total, data = stepsbyday, geom="histogram")
library(ggplot2)
qplot(stepsbyday$date, stepsbyday$total, data = stepsbyday, geom="histogram")
qplot(stepsbyday$date, stepsbyday$total, data = stepsbyday, geom="bar")
qplot(stepsbyday$total, data = stepsbyday, geom="histogram")
paste("Mean of the total number of steps taken by day :", mean(stepsbyday$total, na.rm = T))
str(data)
stepsbyinterval <- data %>% group_by(interval) %>% summarize(total = mean(steps))
12*24
qplot(stepsbyinterval$interval, stepsbyinterval$total, data = stepsbyday, type = "l")
qplot(stepsbyinterval$interval, stepsbyinterval$total, type = "l")
View(stepsbyinterval)
stepsbyinterval <- data %>% group_by(interval) %>% summarize(total = mean(steps, na.rm=T))
qplot(stepsbyinterval$interval, stepsbyinterval$total, type = "l")
60*24
View(stepsbyinterval)
res <- max(stepsbyinterval$total, na.rm=T)
print(res)
ind <- stepsbyinterval$interval[which(max(stepsbyinterval$total, na.rm=T)),]
ind <- stepsbyinterval$interval[which(stepsbyinterval$total == max(stepsbyinterval$total, na.rm=T)),]
ind <- which(stepsbyinterval$total == max(stepsbyinterval$total, na.rm=T))[[1]]
qplot(stepsbyday$total, data = stepsbyday, geom = "histogram", main = "Total number of steps taken each day", xlab = "Number of steps", w = 5)
ggplot() + geom_histogram(data = stepsbyday, aes(x=total), binwidth = 3)
ggplot() + geom_histogram(data = stepsbyday, aes(x=total), binwidth = 30)
ggplot() + geom_histogram(data = stepsbyday, aes(x=total), binwidth = 60)
nb <- data[rowSums(is.na(data)) > 0,]
print(nb)
nb <- sum(data[rowSums(is.na(data)) > 0,])
dataNA <- data[rowSums(is.na(data)) > 0,]
print(length(dataNA)
print(length(dataNA))
print(nrow(dataNA))
dataNA
head(stepsbyinterval)
head(data)
library(dplyr)
myf <- function(df, interval) {mean(df$interval)}
mutate(is.na(data), myf(data, data$interval) )
mutate(dataNA, myf(data, data$interval) )
dataNA
library(dplyr)
library(ggplot2)
zipF <- "activity.zip"
outDir <- "./"
unzip(zipF, exdir=outDir)
data <- read.csv("activity.csv", header = T, sep = ",")
data$date <- as.Date(data$date, format = "%Y-%m-%d")
stepsbyday <- data %>% group_by(date) %>% summarize(total = sum(steps))
qplot(stepsbyday$total, data = stepsbyday, geom = "histogram", main = "Total number of steps taken each day", xlab = "Number of steps")
res <- mean(stepsbyday$total, na.rm = T)
print(res)
res <- median(stepsbyday$total, na.rm = T)
print(res)
stepsbyinterval <- data %>% group_by(interval) %>% summarize(total = mean(steps, na.rm=T))
qplot(stepsbyinterval$interval, stepsbyinterval$total, type = "l", main = "5-minute interval and the average number of steps taken, averaged across all days", xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days")
ind <- which(stepsbyinterval$total == max(stepsbyinterval$total, na.rm=T))[[1]]
print(ind)
dataNA <- data[rowSums(is.na(data)) > 0,]
print(nrow(dataNA))
test <- data
str(test)
str(stepsbyday)
str(stepsbyinterval)
(test %>% filter(is.na(steps) & interval == 0)) <- 1.717
(test %>% filter(is.na(steps) & interval == 0)) [stepsmean] <- 1.717
str(test)
test$stepmeans <- 0
str(test)
(test %>% filter(is.na(steps) & interval == 0)) [stepsmean] <- 1.717
(test %>% filter(is.na(steps) & interval == 0))$stepsmean <- 1.717
(test %>% filter(is.na(steps) & interval == 0))
str(test %>% filter(is.na(steps) & interval == 0))
(test %>% filter(is.na(steps) & interval == 0))$stepmeans <- 1.717
test[(test %>% filter(is.na(steps) & interval == 0))]$stepmeans <- 1.717
test[(test %>% filter(is.na(steps) & interval == 0)),]$stepmeans <- 1.717
test[(is.na(steps) & interval == 0),]$stepmeans <- 1.717
test[(is.na(test$steps) & test$interval == 0),]$stepmeans <- 1.717
head(test)
max(test$interval)
data$stepsmean <- 0
for (inter in seq(0, 2355, by=5)) {
data[(is.na(data$steps) & data$interval == inter),]$stepmeans <- stepsbyinterval$total
}
str(data)
for (inter in seq(0, 2355, by=5)) {
data[(is.na(data$steps) & data$interval == inter),]$stepmeans <- stepsbyinterval[stepsbyinterval$interval == inter,]$total
}
str(stepsbyinterval)
str(data)
for (inter in seq(0, 2355, by=5)) {
data[(is.na(data$steps) & data$interval == inter),]$stepmeans <- stepsbyinterval[stepsbyinterval$interval == inter]$total
}
for (inter in seq(0, 2355, by=5)) {
data[(is.na(data$steps) & data$interval == inter),]$stepmeans <- stepsbyinterval[stepsbyinterval$interval == inter, 1]$total
}
stepsbyinterval[stepsbyinterval$interval == 0, 1]$total
str(stepsbyinterval)
stepsbyinterval[stepsbyinterval$interval == 0, ]$total
stepsbyinterval[stepsbyinterval$interval == 5, ]$total
for (inter in seq(0, 2355, by=5)) {
data[(is.na(data$steps) & data$interval == inter),]$stepmeans <- stepsbyinterval[stepsbyinterval$interval == inter, ]$total
}
str(data)
data[(is.na(data$steps) & data$interval == 0),]$stepmeans
data[(is.na(data) & data$interval == 0),]$stepmeans
data[(is.na(data$steps) & data$interval == 0),]$stepmeans
data[(is.na(data$steps) & data$interval == 5),]$stepmeans
data[is.na(data$steps),]$stepmeans
data[is.na(data),]$stepmeans
data[is.na(data),]
str(data[is.na(data),])
(data[is.na(data),])$stepmeans
dataNA <- data[is.na(data),]
dataNA$stepsmean
library(dplyr)
library(ggplot2)
zipF <- "activity.zip"
outDir <- "./"
unzip(zipF, exdir=outDir)
data <- read.csv("activity.csv", header = T, sep = ",")
data$date <- as.Date(data$date, format = "%Y-%m-%d")
stepsbyday <- data %>% group_by(date) %>% summarize(total = sum(steps))
qplot(stepsbyday$total, data = stepsbyday, geom = "histogram", main = "Total number of steps taken each day", xlab = "Number of steps")
res <- mean(stepsbyday$total, na.rm = T)
print(res)
res <- median(stepsbyday$total, na.rm = T)
print(res)
stepsbyinterval <- data %>% group_by(interval) %>% summarize(total = mean(steps, na.rm=T))
qplot(stepsbyinterval$interval, stepsbyinterval$total, type = "l", main = "5-minute interval and the average number of steps taken, averaged across all days", xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days")
ind <- which(stepsbyinterval$total == max(stepsbyinterval$total, na.rm=T))[[1]]
print(ind)
dataNA <- data[rowSums(is.na(data)) > 0,]
print(nrow(dataNA))
str(data)
str(stepsbyinterval)
data$stepsmean <- stepsbyinterval[match(data$interval, stepsbyinterval$interval),2]
str(data)
str(data %>% filter(is.na()))
data$stepsmean <- as.vector(stepsbyinterval[match(data$interval, stepsbyinterval$interval),2])
str(data)
str(stepsbyinterval[match(data$interval, stepsbyinterval$interval),2])
str(as.vector(stepsbyinterval[match(data$interval, stepsbyinterval$interval),2]))
data %>% filter(is.na())
data$stepsmean <- as.vector(data$stepsmean)
str(data)
data$stepsmean <- as.vector(as.num(data$stepsmean))
data$stepsmean <- as.vector(as.numeric(data$stepsmean))
data$stepsmean <- as.numeric(data$stepsmean)
data$stepsmean <-
0
str(data)
data$stepsmean <- stepsbyinterval[match(data$interval, stepsbyinterval$interval),2]
str(data)
data$stepsmean <-unlist(data$stepsmean)
str(data)
data$stepsmean <- NULL
str(data)
data$stepsmean <- stepsbyinterval[match(data$interval, stepsbyinterval$interval),2]
data$stepsmean <-unlist(data$stepsmean)
str(data)
data %>% filter(is.na())
data %>% filter(is.na(steps)) %>% mutate(steps = newsteps)
data %>% filter(is.na(steps)) %>% mutate(steps = stepsmean)
str(data)
data %>% filter(is.na(steps)) %>% mutate(replace(steps = stepsmean))
data %>% filter(is.na(steps)) %>% replace(steps = stepsmean)
data %>% filter(is.na(steps)) %>% (steps = stepsmean)
data %>% filter(is.na(steps)) %>% summarise(steps = stepsmean)
data[is.na(steps),]
data[is.na(data$steps),]
data[is.na(data$steps),]$steps <- data[is.na(data$steps),]$stepsmean
str(data)
library(dplyr)
library(ggplot2)
zipF <- "activity.zip"
outDir <- "./"
unzip(zipF, exdir=outDir)
data <- read.csv("activity.csv", header = T, sep = ",")
data$date <- as.Date(data$date, format = "%Y-%m-%d")
stepsbyday <- data %>% group_by(date) %>% summarize(total = sum(steps))
qplot(stepsbyday$total, data = stepsbyday, geom = "histogram", main = "Total number of steps taken each day", xlab = "Number of steps")
res <- mean(stepsbyday$total, na.rm = T)
print(res)
res <- median(stepsbyday$total, na.rm = T)
print(res)
stepsbyinterval <- data %>% group_by(interval) %>% summarize(total = mean(steps, na.rm=T))
qplot(stepsbyinterval$interval, stepsbyinterval$total, type = "l", main = "5-minute interval and the average number of steps taken, averaged across all days", xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days")
ind <- which(stepsbyinterval$total == max(stepsbyinterval$total, na.rm=T))[[1]]
print(ind)
dataNA <- data[rowSums(is.na(data)) > 0,]
print(nrow(dataNA))
data2 <- data
data2$stepsmean <- stepsbyinterval[match(data2$interval, stepsbyinterval$interval),2]
data2$stepsmean <-unlist(data2$stepsmean)
data2 %>% filter(is.na(steps)) %>% summarise(steps = stepsmean)
data2[is.na(data2$steps),]$steps <- data2[is.na(data2$steps),]$stepsmean
data2 <- data
data2$stepsmean <- stepsbyinterval[match(data2$interval, stepsbyinterval$interval),2]
data2$stepsmean <-unlist(data2$stepsmean)
data2[is.na(data2$steps),]$steps <- data2[is.na(data2$steps),]$stepsmean
str(data2)
stepsbyday2 <- data2 %>% group_by(date) %>% summarize(total = sum(steps))
qplot(stepsbyday2$total, data = stepsbyday2, geom = "histogram", main = "Total number of steps taken each day", xlab = "Number of steps")
str(data2)
data2NA <- data2[rowSums(is.na(data2)) > 0,]
str(stepsbyday2)
str(stepsbyday)
res <- mean(stepsbyday2$total, na.rm = T)
print(res)
res <- median(stepsbyday2$total, na.rm = T)
print(res)
head(data2)
data2 %>% filter(date = "2012-11-01")
data2 %>% filter(date == "2012-11-01")
data %>% filter(date == "2012-11-01")
data %>% filter(date == "2012-11-02")
data %>% filter(date == "2012-11-05")
data %>% filter(date == "2012-11-15")
library(dplyr)
library(ggplot2)
zipF <- "activity.zip"
outDir <- "./"
unzip(zipF, exdir=outDir)
data <- read.csv("activity.csv", header = T, sep = ",")
data$date <- as.Date(data$date, format = "%Y-%m-%d")
data %>% filter(date == "2012-11-15")
data %>% filter(date == max(date))
View(data)
data %>% filter(date == "2012-10-14")
stepsbyday <- data %>% group_by(date) %>% summarize(total = sum(steps))
qplot(stepsbyday$total, data = stepsbyday, geom = "histogram", main = "Total number of steps taken each day", xlab = "Number of steps")
res <- mean(stepsbyday$total, na.rm = T)
print(res)
res <- median(stepsbyday$total, na.rm = T)
print(res)
stepsbyinterval <- data %>% group_by(interval) %>% summarize(total = mean(steps, na.rm=T))
qplot(stepsbyinterval$interval, stepsbyinterval$total, type = "l", main = "5-minute interval and the average number of steps taken, averaged across all days", xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days")
ind <- which(stepsbyinterval$total == max(stepsbyinterval$total, na.rm=T))[[1]]
print(ind)
dataNA <- data[rowSums(is.na(data)) > 0,]
print(nrow(dataNA))
data2 <- data
data2$stepsmean <- stepsbyinterval[match(data2$interval, stepsbyinterval$interval),2]
data2$stepsmean <-unlist(data2$stepsmean)
data2[is.na(data2$steps),]$steps <- data2[is.na(data2$steps),]$stepsmean
data %>% filter(date == "2012-10-14" && steps > 0)
str(data)
data %>% filter(date == "2012-10-14" && steps == 157)
data %>% filter(date == "2012-10-14" & steps == 157)
data2 %>% filter(date == "2012-10-14" & steps == 157)
stepsbyday2 <- data2 %>% group_by(date) %>% summarize(total = sum(steps))
qplot(stepsbyday2$total, data = stepsbyday2, geom = "histogram", main = "Total number of steps taken each day", xlab = "Number of steps")
View(stepsbyday)
View(stepsbyday2)
res <- mean(stepsbyday2$total, na.rm = T)
print(res)
res <- median(stepsbyday2$total, na.rm = T)
print(res)
res <- mean(stepsbyday2$total, na.rm = T)
data2 %>% filter(date == "2012-10-14" & steps == 157)
data %>% filter(date == "2012-10-14" & steps == 157)
data2 >%> filter(steps <> stepsmean) %>% count()x =
data2 >%> filter(steps <> stepsmean) %>% count()
data2 %>% filter(steps <> stepsmean) %>% count()
data2 %>% filter(steps != stepsmean) %>% count()
data2 %>% filter(steps == stepsmean) %>% count()
data %>% filter(steps == stepsmean) %>% count()
data %>% filter(date == "2012-10-14" & steps == 250)
data %>% filter(steps == 250)
data2 %>% filter(steps == 250)
View(dataNA)
str(data2)
data2$stepsmean <- NULL
str(data2)
data2$day <- weekdays(as.Date(data2$date))
str(data2)
table(data$day)
table(data2$day)
weekday <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekend <- c("Saturday", "Sunday")
data2 <- mutate(data2, day2 = factor(case_when(day %in% weekday ~ "weekday",
day %in% weekend ~ "weekend",
TRUE                ~ NA_character_)))
str(data2)
table(data2$day2)
2592*5
data2$day2 <- NULL
str(data2)
data2 <- mutate(data2, day = factor(case_when(day %in% weekday ~ "weekday",
day %in% weekend ~ "weekend",
TRUE                ~ NA_character_)))
str(data2)
data2$day <- weekdays(as.Date(data2$date))
weekday <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekend <- c("Saturday", "Sunday")
data2 <- mutate(data2, day = factor(case_when(day %in% weekday ~ "weekday",
day %in% weekend ~ "weekend")))
str(data2)
table(data2$day2)
table(data2$day)
stepsbyinterval2 <- data2 %>% group_by(interval) %>% summarize(total = mean(steps, na.rm=T))
qplot(stepsbyinterval2$interval, stepsbyinterval2$total, type = "l", main = "5-minute interval and the average number of steps taken, averaged across all days", xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days")
stepsbyinterval2 <- data2 %>% filter(day == "weekday") %>% group_by(interval) %>% summarize(total = mean(steps, na.rm=T))
qplot(stepsbyinterval2$interval, stepsbyinterval2$total, type = "l", main = "5-minute interval and the average number of steps taken, averaged across all days", xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days")
qplot(stepsbyinterval2$interval, stepsbyinterval2$total, type = "1", main = "5-minute interval and the average number of steps taken, averaged across all days", xlab = "5-minute interval", ylab = "Average number of steps taken, averaged across all days")
qplot(stepsbyinterval$interval, stepsbyinterval$total, type = "l", xlab = "Interval", ylab = "Number of steps")
qplot.ts(stepsbyinterval2$interval, stepsbyinterval2$total, type = "l", xlab = "Interval", ylab = "Number of steps")
qplot(stepsbyinterval2$interval, stepsbyinterval2$total, type = "I", xlab = "Interval", ylab = "Number of steps")
